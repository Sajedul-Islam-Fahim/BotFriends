{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","bots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredBots","filter","bot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAeeA,EAbF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MACnB,OACG,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BL,EAA1B,mBACnB,gCACI,6BAAKC,IACL,4BAAIC,WCaJI,EAnBE,SAAC,GAAW,IAAVC,EAAS,EAATA,KACnB,OACE,8BAEQA,EAAKC,KAAI,SAACC,EAAKC,GACX,OACI,cAAC,EAAD,CAEAV,GAAMO,EAAKG,GAAGV,GACdC,KAAQM,EAAKG,GAAGT,KAChBC,MAASK,EAAKG,GAAGR,OAHXQ,SCMTC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,cACZC,SAAUH,OCCHI,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YCsCEC,G,wDApCb,aAAc,IAAD,8BACX,gBAYFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAZzC,EAAKC,MAAO,CACVvB,KAAM,GACNK,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAQ,EAAKR,SAAS,CAACpB,KAAM4B,S,oBAMrC,WAAS,IAAD,EACqBC,KAAKN,MAAzBvB,EADD,EACCA,KAAKK,EADN,EACMA,YACNyB,EAAe9B,EAAK+B,QAAQ,SAAAC,GAChC,OAAOA,EAAItC,KAAKuC,cAAcC,SAAS7B,EAAY4B,kBAErD,OAAQjC,EAAKmC,OAGX,sBAAKvC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWU,aAAgBuB,KAAKX,iBAChC,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,KAAO8B,SANvB,6C,GAxBcM,cCMHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3332f962.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id,name,email}) => {\r\n    return (\r\n       <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n           <img alt='bots' src={`https://robohash.org/${id}?size=200x200`} />\r\n           <div>\r\n               <h2>{name}</h2>\r\n               <p>{email}</p>\r\n           </div>\r\n\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nconst CardList = ({bots}) =>{\r\nreturn (\r\n  <div>\r\n      {\r\n          bots.map((user,i) => {\r\n              return (\r\n                  <Card\r\n                  key ={i}\r\n                  id = {bots[i].id}\r\n                  name = {bots[i].name}\r\n                  email = {bots[i].email}\r\n                  />\r\n              );\r\n          })\r\n      }\r\n  </div>\r\n);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='Search bots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state= {\n      bots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=> response.json())\n    .then(users=>{this.setState({bots: users})});\n  }\n  onSearchChange = (event) =>{\n    this.setState({searchfield: event.target.value})\n  }\n\n  render(){\n    const {bots,searchfield} = this.state;\n    const filteredBots = bots.filter( bot =>{\n      return bot.name.toLowerCase().includes(searchfield.toLowerCase());\n    })\n    return !bots.length ?\n    <h1>Loading</h1> :\n    (\n      <div className='tc'>\n        <h1 className='f1'>BotFriends</h1>\n        <SearchBox searchChange = {this.onSearchChange}/>\n        <Scroll>\n          <CardList bots= {filteredBots} />\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}